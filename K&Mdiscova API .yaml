openapi: 3.0.3
info:
  title: K&Mdiscova API
  version: 1.0.0
  description: Personalized Child Development Platform
paths:
  /api/appointments/:
    get:
      operationId: appointments_list
      description: List appointments with permission filtering
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Appointments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentSummaryList'
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
    post:
      operationId: appointments_create
      description: Book a new appointment
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Appointment booked successfully
                example:
                  message: Appointment booked successfully
                  appointment:
                    appointment_id: uuid
                    child_name: John Doe
                    psychologist_name: Dr. Jane Smith
                    session_type: OnlineMeeting
                    scheduled_start_time: '2024-01-15T10:00:00Z'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid booking data or slots not available
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Booking not allowed
          description: ''
  /api/appointments/{appointment_id}/:
    get:
      operationId: appointments_retrieve
      description: Get detailed appointment information
      parameters:
      - in: path
        name: appointment_id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the appointment
        required: true
      tags:
      - Appointments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentDetail'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Appointment not found
          description: ''
    patch:
      operationId: appointments_partial_update
      description: Update appointment details (notes)
      parameters:
      - in: path
        name: appointment_id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the appointment
        required: true
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Appointment updated successfully
                example:
                  message: Appointment updated successfully
                  appointment:
                    appointment_id: uuid
                    parent_notes: Updated notes
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid update data
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Appointment not found
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
  /api/appointments/{appointment_id}/cancel/:
    post:
      operationId: appointments_cancel_create
      description: Cancel an appointment
      parameters:
      - in: path
        name: appointment_id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the appointment
        required: true
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentCancellationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentCancellationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentCancellationRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Appointment cancelled successfully
                example:
                  message: Appointment cancelled successfully
                  refund_info:
                    refund_amount: 150.0
                    refund_percentage: 100
                    refund_reason: Full refund - cancelled 24+ hours before
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Cannot cancel appointment
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Appointment not found
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
  /api/appointments/{appointment_id}/complete/:
    post:
      operationId: appointments_complete_create
      description: Mark appointment as completed (psychologists only)
      parameters:
      - in: path
        name: appointment_id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the appointment
        required: true
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Appointment marked as completed
                example:
                  message: Appointment marked as completed
                  appointment:
                    appointment_id: uuid
                    appointment_status: Completed
                    actual_end_time: '2024-01-15T11:00:00Z'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Cannot complete appointment
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied - only psychologists can complete appointments
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Appointment not found
          description: ''
  /api/appointments/{appointment_id}/mark_no_show/:
    post:
      operationId: appointments_mark_no_show_create
      description: Mark appointment as no-show (only available 30 minutes after scheduled
        end time)
      parameters:
      - in: path
        name: appointment_id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the appointment
        required: true
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoShowRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoShowRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoShowRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Appointment marked as no-show successfully
                example:
                  message: Appointment marked as no-show successfully
                  appointment:
                    appointment_id: uuid
                    appointment_status: No_Show
                    actual_end_time: '2024-01-15T11:30:00Z'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Cannot mark as no-show at this time
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Appointment not found
          description: ''
  /api/appointments/{appointment_id}/start_online_session/:
    post:
      operationId: appointments_start_online_session_create
      description: Start online session and set status to In_Progress
      parameters:
      - in: path
        name: appointment_id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the appointment
        required: true
      tags:
      - Appointments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Online session started successfully
                example:
                  message: Online session started successfully
                  appointment:
                    appointment_id: uuid
                    appointment_status: In_Progress
                    actual_start_time: '2024-01-15T10:00:00Z'
                    meeting_link: https://zoom.us/j/123456789
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Cannot start session at this time
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Appointment not found
          description: ''
  /api/appointments/analytics/psychologist_stats/:
    get:
      operationId: appointments_analytics_psychologist_stats_retrieve
      description: Get appointment statistics for a psychologist
      parameters:
      - in: query
        name: date_from
        schema:
          type: string
          format: date
        description: 'Start date for statistics (default: 30 days ago)'
      - in: query
        name: date_to
        schema:
          type: string
          format: date
        description: 'End date for statistics (default: today)'
      - in: query
        name: psychologist_id
        schema:
          type: string
          format: uuid
        description: Psychologist ID (optional - defaults to current user if psychologist)
      tags:
      - Appointment Analytics
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Psychologist appointment statistics
                example:
                  psychologist_id: uuid
                  psychologist_name: Dr. John Doe
                  date_range:
                    from: '2024-01-01'
                    to: '2024-01-31'
                  statistics:
                    total_appointments: 45
                    completed_appointments: 38
                    cancelled_appointments: 5
                    no_show_appointments: 2
                    completion_rate: 84.4
                    online_sessions: 25
                    initial_consultations: 20
                    upcoming_appointments: 12
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Psychologist not found
          description: ''
  /api/appointments/available_slots/:
    get:
      operationId: appointments_available_slots_retrieve
      description: Get available appointment slots for booking
      parameters:
      - in: query
        name: date_from
        schema:
          type: string
          format: date
        description: 'Start date for availability search (default: today)'
      - in: query
        name: date_to
        schema:
          type: string
          format: date
        description: 'End date for availability search (default: +30 days)'
      - in: query
        name: psychologist_id
        schema:
          type: string
        description: Psychologist ID to get availability for
      - in: query
        name: session_type
        schema:
          type: string
        description: 'Session type: OnlineMeeting or InitialConsultation'
      tags:
      - Appointments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Available booking slots
                example:
                  psychologist_name: Dr. Jane Smith
                  session_type: OnlineMeeting
                  total_slots: 25
                  available_slots:
                  - slot_id: 123
                    date: '2024-01-15'
                    start_time: '10:00'
                    end_time: '11:00'
                    session_types:
                    - OnlineMeeting
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid parameters
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Psychologist not found
          description: ''
  /api/appointments/history/:
    get:
      operationId: appointments_history_retrieve
      description: Get past appointments
      tags:
      - Appointments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Past appointments
                example:
                  count: 10
                  appointments: []
          description: ''
  /api/appointments/my_appointments/:
    get:
      operationId: appointments_my_appointments_list
      description: Get current user's appointments
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Appointments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentSummaryList'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: User profile not found
          description: ''
  /api/appointments/search/:
    post:
      operationId: appointments_search_create
      description: Search appointments with filters
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentSearchRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentSummaryList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid search parameters
          description: ''
  /api/appointments/slots/:
    get:
      operationId: appointments_slots_list
      description: |-
        ViewSet for appointment slot management and generation
        - Psychologists: Create and manage their slots
        - Parents: View available slots for booking
        - Admins: Full access to all slots
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - appointments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentSlotList'
          description: ''
    post:
      operationId: appointments_slots_create
      description: Create new appointment slot (Admin/System use)
      tags:
      - Appointment Slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentSlotCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentSlotCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentSlotCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Appointment slot created successfully
                example:
                  message: Appointment slot created successfully
                  slot:
                    slot_id: 1
                    slot_date: '2024-01-15'
                    start_time: 09:00
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid slot data
          description: ''
  /api/appointments/slots/{slot_id}/:
    get:
      operationId: appointments_slots_retrieve
      description: Get specific appointment slot details
      parameters:
      - in: path
        name: slot_id
        schema:
          type: integer
          description: Unique identifier for the appointment slot
        required: true
      tags:
      - Appointment Slots
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSlot'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Appointment slot not found
          description: ''
    delete:
      operationId: appointments_slots_destroy
      description: Delete appointment slot
      parameters:
      - in: path
        name: slot_id
        schema:
          type: integer
          description: Unique identifier for the appointment slot
        required: true
      tags:
      - Appointment Slots
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Appointment slot deleted successfully
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Appointment slot not found
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Cannot delete booked slot
          description: ''
  /api/appointments/slots/available_for_booking/:
    get:
      operationId: appointments_slots_available_for_booking_retrieve
      description: Get available appointment slots for booking
      parameters:
      - in: query
        name: date_from
        schema:
          type: string
          format: date
        description: 'Start date for available slots (default: today)'
      - in: query
        name: date_to
        schema:
          type: string
          format: date
        description: 'End date for available slots (default: +30 days)'
      - in: query
        name: psychologist_id
        schema:
          type: string
        description: Psychologist UUID to get slots for
      - in: query
        name: session_type
        schema:
          type: string
        description: 'Session type: OnlineMeeting or InitialConsultation'
      tags:
      - Appointment Slots
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Available booking slots
                example:
                  psychologist_name: Dr. John Doe
                  session_type: OnlineMeeting
                  total_slots: 25
                  available_slots:
                  - slot_id: 1
                    date: '2024-01-15'
                    start_time: 09:00
                    end_time: '10:00'
                    session_types:
                    - OnlineMeeting
                    is_consecutive_block: false
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid parameters
          description: ''
  /api/appointments/slots/cleanup_past_slots/:
    post:
      operationId: appointments_slots_cleanup_past_slots_create
      description: Clean up past unbooked appointment slots (Admin only)
      parameters:
      - in: query
        name: days_past
        schema:
          type: integer
        description: 'Number of days past to clean up (default: 7)'
      tags:
      - Appointment Slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentSlotRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentSlotRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentSlotRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Cleanup completed
                example:
                  message: Cleanup completed successfully
                  deleted_count: 150
          description: ''
  /api/appointments/slots/generate_slots/:
    post:
      operationId: appointments_slots_generate_slots_create
      description: Generate appointment slots from psychologist's availability blocks
      parameters:
      - in: query
        name: availability_block_id
        schema:
          type: integer
        description: Generate slots for specific availability block only
      - in: query
        name: date_from
        schema:
          type: string
          format: date
        description: 'Start date for slot generation (default: today)'
      - in: query
        name: date_to
        schema:
          type: string
          format: date
        description: 'End date for slot generation (default: +90 days)'
      tags:
      - Appointment Slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentSlotRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentSlotRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentSlotRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Slots generated successfully
                example:
                  message: Slots generated successfully
                  total_slots_created: 45
                  date_range:
                    from: '2024-01-15'
                    to: '2024-04-15'
                  results:
                  - availability_block_id: 1
                    slots_created: 15
                    success: true
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid parameters
          description: ''
  /api/appointments/slots/my_slots/:
    get:
      operationId: appointments_slots_my_slots_list
      description: Get current psychologist's appointment slots
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Appointment Slots
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentSlotList'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Psychologist profile not found
          description: ''
  /api/appointments/slots/statistics/:
    get:
      operationId: appointments_slots_statistics_retrieve
      description: Get appointment slot statistics (Admin only)
      tags:
      - Appointment Slots
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Slot statistics
                example:
                  total_slots: 500
                  available_slots: 325
                  booked_slots: 175
                  utilization_rate: 35.0
                  by_psychologist:
                  - psychologist_name: Dr. Jane Doe
                    total_slots: 100
                    booked_slots: 45
          description: ''
  /api/appointments/upcoming/:
    get:
      operationId: appointments_upcoming_retrieve
      description: Get upcoming appointments with next appointment highlighted
      parameters:
      - in: query
        name: status
        schema:
          type: string
        description: Filter by appointment status
      - in: query
        name: upcoming
        schema:
          type: boolean
        description: Filter for upcoming appointments only
      tags:
      - Appointments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Upcoming appointments
                example:
                  count: 3
                  next_appointment:
                    appointment_id: uuid
                    scheduled_start_time: '2024-01-15T10:00:00Z'
                    child_name: John Doe
                  appointments: []
          description: ''
  /api/appointments/verify_qr/:
    post:
      operationId: appointments_verify_qr_create
      description: Verify in-person appointment using QR code
      tags:
      - Appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QRVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QRVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QRVerificationRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: QR code verified successfully
                example:
                  message: Session verified successfully
                  appointment:
                    appointment_id: uuid
                    session_verified_at: '2024-01-15T10:00:00Z'
                    actual_start_time: '2024-01-15T10:00:00Z'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid QR code or verification not allowed
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: QR code not found
          description: ''
  /api/auth/facebook_auth/:
    post:
      operationId: auth_facebook_auth_create
      description: Authenticate with Facebook OAuth
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookAuthRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacebookAuthRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacebookAuthRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Facebook authentication successful
                example:
                  message: Facebook authentication successful
                  user:
                    id: 1
                    email: user@example.com
                    user_type: Parent
                  token: your-auth-token
                  is_new_user: false
          description: ''
        '201':
          content:
            application/json:
              schema:
                description: Facebook registration successful
                example:
                  message: Facebook registration successful
                  user:
                    id: 1
                    email: user@example.com
                    user_type: Parent
                  token: your-auth-token
                  is_new_user: true
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid token or registration data
          description: ''
  /api/auth/google_auth/:
    post:
      operationId: auth_google_auth_create
      description: Authenticate with Google OAuth
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleAuthRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleAuthRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleAuthRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Google authentication successful
                example:
                  message: Google authentication successful
                  user:
                    id: 1
                    email: user@example.com
                    user_type: Parent
                  token: your-auth-token
                  is_new_user: false
          description: ''
        '201':
          content:
            application/json:
              schema:
                description: Google registration successful
                example:
                  message: Google registration successful
                  user:
                    id: 1
                    email: user@example.com
                    user_type: Parent
                  token: your-auth-token
                  is_new_user: true
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid token or registration data
          description: ''
  /api/auth/link_facebook/:
    post:
      operationId: auth_link_facebook_create
      description: Link Facebook account to existing user
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookLinkAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacebookLinkAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacebookLinkAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Facebook account linked successfully
                example:
                  message: Facebook account linked successfully
                  user:
                    id: 1
                    email: user@example.com
                    is_facebook_user: true
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid request or token
          description: ''
        '409':
          content:
            application/json:
              schema:
                description: Facebook account already linked elsewhere
          description: ''
  /api/auth/link_google/:
    post:
      operationId: auth_link_google_create
      description: Link Google account to existing user
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLinkAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleLinkAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleLinkAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Google account linked successfully
                example:
                  message: Google account linked successfully
                  user:
                    id: 1
                    email: user@example.com
                    is_google_user: true
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid request or token
          description: ''
        '409':
          content:
            application/json:
              schema:
                description: Google account already linked elsewhere
          description: ''
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: User login
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Login successful
                example:
                  message: Login successful
                  user:
                    id: 1
                    email: user@example.com
                    user_type: Parent
                  token: your-auth-token
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid credentials
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      description: User logout - deletes authentication token
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Logged out successfully
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Logout failed
          description: ''
  /api/auth/me/:
    get:
      operationId: auth_me_retrieve
      description: Get current authenticated user's profile
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/password-reset/:
    post:
      operationId: auth_password_reset_create
      description: Request a password reset email
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Password reset email sent
                example:
                  message: Password reset email sent if account exists
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad request
          description: ''
  /api/auth/password-reset-confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: Confirm password reset with token and new password
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Password reset successful
                example:
                  message: Password has been reset successfully
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid token or password
          description: ''
  /api/auth/register/:
    post:
      operationId: auth_register_create
      description: Register a new user
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Registration successful
                example:
                  message: Registration successful. Please check your email for verification.
                  user:
                    id: 1
                    email: user@example.com
                    user_type: Parent
                  token: your-auth-token
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad request
          description: ''
  /api/auth/unlink_facebook/:
    post:
      operationId: auth_unlink_facebook_create
      description: Unlink Facebook account from user
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacebookUnlinkAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacebookUnlinkAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacebookUnlinkAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Facebook account unlinked successfully
                example:
                  message: Facebook account unlinked successfully
                  user:
                    id: 1
                    email: user@example.com
                    is_facebook_user: false
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid request or cannot unlink
          description: ''
  /api/auth/unlink_google/:
    post:
      operationId: auth_unlink_google_create
      description: Unlink Google account from user
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleUnlinkAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleUnlinkAccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GoogleUnlinkAccountRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Google account unlinked successfully
                example:
                  message: Google account unlinked successfully
                  user:
                    id: 1
                    email: user@example.com
                    is_google_user: false
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid request or cannot unlink
          description: ''
  /api/auth/update_profile/:
    patch:
      operationId: auth_update_profile_partial_update
      description: Update current user's profile
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Profile updated successfully
                example:
                  message: Profile updated successfully
                  user:
                    id: 1
                    email: user@example.com
                    user_type: Parent
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Profile update failed
          description: ''
  /api/auth/verify-email/{uidb64}/{token}/:
    get:
      operationId: auth_verify_email_retrieve
      description: Verify email address using token from email
      parameters:
      - in: path
        name: token
        schema:
          type: string
        description: Email verification token
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        description: Base64 encoded user ID
        required: true
      tags:
      - Authentication
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Email verified successfully
                example:
                  message: Email verified successfully
                  user:
                    id: 1
                    email: user@example.com
                    is_verified: true
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid or expired token
          description: ''
  /api/children/manage/:
    get:
      operationId: children_manage_list
      description: List children (filtered by permissions)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Child Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChildSummaryList'
          description: ''
  /api/children/manage/{id}/:
    get:
      operationId: children_manage_retrieve
      description: Retrieve specific child profile
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the child
        required: true
      tags:
      - Child Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildDetail'
          description: ''
  /api/children/manage/search/:
    post:
      operationId: children_manage_search_create
      description: Search children by various criteria
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Child Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChildSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChildSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChildSearchRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChildSummaryList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid search parameters
          description: ''
  /api/children/manage/statistics/:
    get:
      operationId: children_manage_statistics_retrieve
      description: Get platform-wide child statistics (Admin only)
      tags:
      - Child Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Platform-wide child statistics
                example:
                  total_children: 150
                  age_distribution:
                    5-8: 45
                    9-12: 65
                    13-17: 40
                  consent_stats:
                    fully_consented: 120
                    partial_consent: 25
                    no_consent: 5
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
  /api/children/profile/:
    post:
      operationId: children_profile_create
      description: Create a new child profile
      tags:
      - Child Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChildCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChildCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChildCreateRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Child profile created successfully
                example:
                  message: Child profile created successfully
                  child:
                    id: uuid
                    first_name: John
                    age: 8
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid data provided
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Child creation not allowed
          description: ''
  /api/children/profile/{id}/:
    get:
      operationId: children_profile_retrieve
      description: Get detailed child profile
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the child
        required: true
      tags:
      - Child Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildDetail'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Child not found
          description: ''
    patch:
      operationId: children_profile_partial_update
      description: Update child profile
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the child
        required: true
      tags:
      - Child Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChildUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChildUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChildUpdateRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Child profile updated successfully
                example:
                  message: Child profile updated successfully
                  child:
                    id: uuid
                    first_name: John
                    age: 8
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid data provided
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Child not found
          description: ''
    delete:
      operationId: children_profile_destroy
      description: Delete child profile
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the child
        required: true
      tags:
      - Child Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Child profile deleted successfully
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Child not found
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
  /api/children/profile/{id}/bulk_consent/:
    post:
      operationId: children_profile_bulk_consent_create
      description: Update multiple consent types at once
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the child
        required: true
      tags:
      - Child Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkConsentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkConsentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkConsentRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Bulk consent updated successfully
                example:
                  message: Bulk consent updated successfully
                  updated_consents:
                  - service_consent
                  - assessment_consent
                  consent_summary:
                    granted_count: 4
                    total_consents: 4
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid consent data
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Child not found
          description: ''
  /api/children/profile/{id}/manage_consent/:
    post:
      operationId: children_profile_manage_consent_create
      description: Manage consent for a child
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the child
        required: true
      tags:
      - Child Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentManagementRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsentManagementRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsentManagementRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Consent updated successfully
                example:
                  message: Consent updated successfully
                  consent_summary:
                    granted_count: 3
                    total_consents: 4
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid consent data
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Child not found
          description: ''
  /api/children/profile/{id}/profile_summary/:
    get:
      operationId: children_profile_profile_summary_retrieve
      description: Get child profile summary with metrics
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the child
        required: true
      tags:
      - Child Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Child profile summary
                example:
                  profile_completeness: 85.5
                  consent_summary:
                    granted_count: 3
                    total_consents: 4
                  age_info:
                    age: 8
                    age_in_months: 96
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Child not found
          description: ''
  /api/children/profile/my_children/:
    get:
      operationId: children_profile_my_children_list
      description: Get current parent's children list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Child Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChildSummaryList'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Parent profile not found
          description: ''
  /api/parents/manage/:
    get:
      operationId: parents_manage_list
      description: List parents (filtered by permissions)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Parent Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParentSummaryList'
          description: ''
  /api/parents/manage/{user}/:
    get:
      operationId: parents_manage_retrieve
      description: Retrieve specific parent profile
      parameters:
      - in: path
        name: user
        schema:
          type: string
          format: uuid
          description: Link to the base user account
        required: true
      tags:
      - Parent Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentDetail'
          description: ''
  /api/parents/manage/search/:
    post:
      operationId: parents_manage_search_create
      description: Search parents by various criteria (Admin only)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Parent Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParentSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParentSearchRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParentSummaryList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid search parameters
          description: ''
  /api/parents/profile/communication-preferences/:
    get:
      operationId: parents_profile_communication_preferences_retrieve
      description: Get current communication preferences
      tags:
      - Parent Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationPreferences'
          description: ''
    patch:
      operationId: parents_profile_communication_preferences_partial_update
      description: Get current communication preferences
      tags:
      - Parent Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommunicationPreferencesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommunicationPreferencesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommunicationPreferencesRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationPreferences'
          description: ''
  /api/parents/profile/communication-preferences/reset/:
    post:
      operationId: parents_profile_communication_preferences_reset_create
      description: Reset communication preferences to default values
      tags:
      - Parent Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Communication preferences reset to defaults
                example:
                  message: Communication preferences reset to defaults
                  preferences:
                    email_notifications: true
                    sms_notifications: false
          description: ''
  /api/parents/profile/completeness/:
    get:
      operationId: parents_profile_completeness_retrieve
      description: Get profile completeness score and missing fields
      tags:
      - Parent Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Profile completeness information
                example:
                  overall_score: 75.5
                  required_score: 100.0
                  optional_score: 60.0
                  is_complete: true
                  missing_required_fields: []
                  missing_optional_fields:
                  - address_line1
                  - postal_code
          description: ''
  /api/parents/profile/profile/:
    get:
      operationId: parents_profile_profile_retrieve
      description: Get current parent's profile with detailed information
      tags:
      - Parent Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentDetail'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Parent profile not found
          description: ''
  /api/parents/profile/update_profile/:
    patch:
      operationId: parents_profile_update_profile_partial_update
      description: Update current parent's profile
      tags:
      - Parent Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedParentProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedParentProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedParentProfileUpdateRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Profile updated successfully
                example:
                  message: Profile updated successfully
                  profile:
                    first_name: John
                    last_name: Doe
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid data provided
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Profile update not allowed
          description: ''
  /api/payments/orders/:
    get:
      operationId: payments_orders_list
      description: List user's payment orders
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Payment Orders
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderSummaryList'
          description: ''
  /api/payments/orders/{id}/:
    get:
      operationId: payments_orders_retrieve
      description: Get detailed order information
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payment Orders
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/payments/orders/{id}/cancel/:
    post:
      operationId: payments_orders_cancel_create
      description: |-
        Cancel a pending order
        POST /api/payments/orders/{id}/cancel/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/payments/orders/{id}/initiate_payment/:
    post:
      operationId: payments_orders_initiate_payment_create
      description: Initiate payment for an order
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payment Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Payment initiated successfully
                example:
                  message: Payment initiated successfully
                  payment_data:
                    payment_id: uuid
                    client_secret: pi_xxx_secret_xxx
                    payment_intent_id: pi_xxx
                    amount: '100.00'
                    currency: USD
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Payment initiation failed
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Order not found
          description: ''
  /api/payments/orders/{id}/status/:
    get:
      operationId: payments_orders_status_retrieve
      description: Get order status and payment information
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payment Orders
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Order status
                example:
                  order_id: uuid
                  status: pending
                  can_be_paid: true
                  is_expired: false
          description: ''
  /api/payments/orders/create_appointment_order/:
    post:
      operationId: payments_orders_create_appointment_order_create
      description: Create appointment booking order
      tags:
      - Payment Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointmentOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateAppointmentOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateAppointmentOrderRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Appointment order created successfully
                example:
                  message: Appointment order created successfully
                  order:
                    order_id: uuid
                    amount: '150.00'
                    currency: USD
                    session_type: online_session
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid data or order creation failed
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
  /api/payments/orders/create_appointment_order_with_reservation/:
    post:
      operationId: payments_orders_create_appointment_order_with_reservation_create
      description: Cancel a pending order
      tags:
      - Payment Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointmentOrderWithReservationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateAppointmentOrderWithReservationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateAppointmentOrderWithReservationRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Order cancelled successfully
                example:
                  message: Order cancelled successfully
                  order_id: uuid
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Order cannot be cancelled
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Order not found
          description: ''
  /api/payments/orders/create_registration_order/:
    post:
      operationId: payments_orders_create_registration_order_create
      description: Create psychologist registration order
      tags:
      - Payment Orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRegistrationOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRegistrationOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateRegistrationOrderRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Registration order created successfully
                example:
                  message: Registration order created successfully
                  order:
                    order_id: uuid
                    amount: '100.00'
                    currency: USD
                    status: pending
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid data or order creation failed
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
  /api/payments/payments/:
    get:
      operationId: payments_payments_list
      description: List user's payments
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Payments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentSummaryList'
          description: ''
  /api/payments/payments/{id}/:
    get:
      operationId: payments_payments_retrieve
      description: Get detailed payment information
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payments
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/payments/payments/{id}/refund/:
    post:
      operationId: payments_payments_refund_create
      description: Process refund for a payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundPaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RefundPaymentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RefundPaymentRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Refund processed successfully
                example:
                  message: Refund processed successfully
                  refund_data:
                    refund_id: rf_xxx
                    amount: '100.00'
                    currency: USD
                    status: succeeded
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Refund processing failed
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Permission denied
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Payment not found
          description: ''
  /api/payments/payments/check_status/:
    post:
      operationId: payments_payments_check_status_create
      description: Check and update payment status with provider
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentStatusRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentStatusRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Payment status updated
                example:
                  message: Payment status updated
                  payment:
                    payment_id: uuid
                    status: succeeded
                    amount: '100.00'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Status check failed
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Payment not found
          description: ''
  /api/payments/pricing/:
    get:
      operationId: payments_pricing_retrieve
      description: Get pricing information for all services
      parameters:
      - in: query
        name: currency
        schema:
          type: string
        description: 'Currency code (default: USD)'
        examples:
          USD:
            value: USD
      tags:
      - Pricing
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Pricing information
                example:
                  currency: USD
                  services:
                    psychologist_registration: '100.00'
                    online_session: '150.00'
                    initial_consultation: '280.00'
                  fees_example:
                    base_amount: '100.00'
                    provider_fee: '3.20'
                    platform_fee: '0.00'
                    total_amount: '103.20'
          description: ''
  /api/payments/transactions/:
    get:
      operationId: payments_transactions_list
      description: List user's transaction history
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Transactions
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactionList'
          description: ''
  /api/payments/transactions/{id}/:
    get:
      operationId: payments_transactions_retrieve
      description: Get detailed transaction information
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Transactions
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: ''
  /api/payments/webhooks/stripe/:
    post:
      operationId: payments_webhooks_stripe_create
      description: Handle Stripe webhook events
      tags:
      - Webhooks
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          description:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Webhook processed successfully
                example:
                  status: success
                  event_type: payment_intent.succeeded
                  processed: true
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Webhook processing failed
          description: ''
  /api/psychologists/availability/:
    post:
      operationId: psychologists_availability_create
      description: Create new availability block
      tags:
      - Psychologist Availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsychologistAvailabilityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PsychologistAvailabilityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PsychologistAvailabilityRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Availability block created successfully
                example:
                  message: Availability block created successfully
                  availability:
                    availability_id: 1
                    day_name: Monday
                    time_range_display: 09:00 - 12:00
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid availability data
          description: ''
  /api/psychologists/availability/{availability_id}/:
    get:
      operationId: psychologists_availability_retrieve
      description: Get specific availability block
      parameters:
      - in: path
        name: availability_id
        schema:
          type: integer
          description: Unique identifier for availability block
        required: true
      tags:
      - Psychologist Availability
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsychologistAvailability'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Availability block not found
          description: ''
    patch:
      operationId: psychologists_availability_partial_update
      description: Update availability block
      parameters:
      - in: path
        name: availability_id
        schema:
          type: integer
          description: Unique identifier for availability block
        required: true
      tags:
      - Psychologist Availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistAvailabilityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistAvailabilityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistAvailabilityRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Availability block updated successfully
                example:
                  message: Availability block updated successfully
                  availability:
                    availability_id: 1
                    day_name: Monday
                    time_range_display: 09:00 - 12:00
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid availability data
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Availability block not found
          description: ''
    delete:
      operationId: psychologists_availability_destroy
      description: Delete availability block
      parameters:
      - in: path
        name: availability_id
        schema:
          type: integer
          description: Unique identifier for availability block
        required: true
      tags:
      - Psychologist Availability
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Availability block deleted successfully
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Availability block not found
          description: ''
  /api/psychologists/availability/{availability_id}/deletion_impact/:
    get:
      operationId: psychologists_availability_deletion_impact_retrieve
      description: Check what would happen if this availability block is deleted
      parameters:
      - in: path
        name: availability_id
        schema:
          type: integer
          description: Unique identifier for availability block
        required: true
      tags:
      - Psychologist Availability
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Deletion impact analysis
                example:
                  can_delete: false
                  total_slots: 45
                  booked_slots: 3
                  unbooked_slots: 42
                  booked_appointments: 3
                  warning: This availability block has 3 booked appointments
          description: ''
  /api/psychologists/availability/appointment_slots/:
    get:
      operationId: psychologists_availability_appointment_slots_retrieve
      description: Get available appointment slots for booking
      parameters:
      - in: query
        name: date_from
        schema:
          type: string
          format: date
        description: 'Start date for availability slots (default: today)'
      - in: query
        name: date_to
        schema:
          type: string
          format: date
        description: 'End date for availability slots (default: +30 days)'
      tags:
      - Psychologist Availability
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Available appointment slots
                example:
                  psychologist_name: Dr. John Doe
                  date_range:
                    from: '2024-01-01'
                    to: '2024-01-31'
                  appointment_slots:
                  - date: '2024-01-01'
                    start_time: 09:00
                    is_available: true
          description: ''
  /api/psychologists/availability/bulk_create/:
    post:
      operationId: psychologists_availability_bulk_create_create
      description: Create multiple availability blocks for weekly schedule
      tags:
      - Psychologist Availability
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              weekly_schedule:
                type: object
                example:
                  monday:
                  - start_time: 09:00
                    end_time: '12:00'
                  tuesday:
                  - start_time: '14:00'
                    end_time: '17:00'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Bulk availability created
                example:
                  success: 5
                  errors: 0
                  created_blocks:
                  - availability_id: 1
                    day_name: Monday
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid schedule data
          description: ''
  /api/psychologists/availability/my_availability/:
    get:
      operationId: psychologists_availability_my_availability_list
      description: Get current psychologist's availability blocks
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Psychologist Availability
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPsychologistAvailabilityList'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Psychologist profile not found
          description: ''
  /api/psychologists/availability/weekly_summary/:
    get:
      operationId: psychologists_availability_weekly_summary_retrieve
      description: Get weekly availability summary
      tags:
      - Psychologist Availability
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Weekly availability summary
                example:
                  psychologist_name: Dr. John Doe
                  total_weekly_hours: 40
                  total_weekly_slots: 40
                  weekly_availability:
                    monday:
                      blocks_count: 2
                      total_hours: 8
          description: ''
  /api/psychologists/manage/:
    get:
      operationId: psychologists_manage_list
      description: List all psychologists (Admin only)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Psychologist Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPsychologistSummaryList'
          description: ''
  /api/psychologists/manage/{user}/:
    get:
      operationId: psychologists_manage_retrieve
      description: Get detailed psychologist profile (Admin only)
      parameters:
      - in: path
        name: user
        schema:
          type: string
          format: uuid
          description: Link to the base user account
        required: true
      tags:
      - Psychologist Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsychologistDetail'
          description: ''
  /api/psychologists/manage/search/:
    post:
      operationId: psychologists_manage_search_create
      description: Search all psychologists (Admin only)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Psychologist Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsychologistSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PsychologistSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PsychologistSearchRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPsychologistSummaryList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid search parameters
          description: ''
  /api/psychologists/manage/statistics/:
    get:
      operationId: psychologists_manage_statistics_retrieve
      description: Get platform-wide psychologist statistics (Admin only)
      tags:
      - Psychologist Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Platform-wide psychologist statistics
                example:
                  total_psychologists: 50
                  by_verification_status:
                    Approved: 35
                    Pending: 10
                    Rejected: 5
                  by_services:
                    online_only: 20
                    consultation_only: 5
                    both: 25
          description: ''
  /api/psychologists/marketplace/:
    get:
      operationId: psychologists_marketplace_list
      description: List marketplace psychologists (approved and visible)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Psychologist Marketplace
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPsychologistMarketplaceList'
          description: ''
  /api/psychologists/marketplace/{user}/:
    get:
      operationId: psychologists_marketplace_retrieve
      description: Get detailed psychologist profile for marketplace
      parameters:
      - in: path
        name: user
        schema:
          type: string
          format: uuid
          description: Link to the base user account
        required: true
      tags:
      - Psychologist Marketplace
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsychologistDetail'
          description: ''
  /api/psychologists/marketplace/{user}/availability/:
    get:
      operationId: psychologists_marketplace_availability_retrieve
      description: Get psychologist availability for appointment booking
      parameters:
      - in: query
        name: date_from
        schema:
          type: string
          format: date
        description: 'Start date for availability (default: today)'
      - in: query
        name: date_to
        schema:
          type: string
          format: date
        description: 'End date for availability (default: +30 days)'
      - in: path
        name: psychologist_id
        schema:
          type: string
        description: Psychologist user ID
        required: true
      - in: path
        name: user
        schema:
          type: string
          format: uuid
          description: Link to the base user account
        required: true
      tags:
      - Psychologist Marketplace
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Psychologist availability for booking
                example:
                  psychologist_name: Dr. John Doe
                  appointment_slots:
                  - date: '2024-01-01'
                    start_time: 09:00
                    is_available: true
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Psychologist not found
          description: ''
  /api/psychologists/marketplace/filter/:
    get:
      operationId: psychologists_marketplace_filter_list
      description: Filter psychologists by query parameters
      parameters:
      - in: query
        name: location
        schema:
          type: string
        description: Location keywords for office address
      - in: query
        name: min_experience
        schema:
          type: integer
        description: Minimum years of experience
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: services
        schema:
          type: string
        description: 'Filter by services: online, consultation, or both'
      tags:
      - Psychologist Marketplace
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPsychologistMarketplaceList'
          description: ''
  /api/psychologists/marketplace/search/:
    post:
      operationId: psychologists_marketplace_search_create
      description: Search psychologists in marketplace
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Psychologist Marketplace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsychologistSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PsychologistSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PsychologistSearchRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPsychologistMarketplaceList'
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid search parameters
          description: ''
  /api/psychologists/profile/:
    post:
      operationId: psychologists_profile_create
      description: Create psychologist profile (after user registration and email
        verification)
      tags:
      - Psychologist Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PsychologistProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PsychologistProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PsychologistProfileUpdateRequest'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Psychologist profile created successfully
                example:
                  message: Profile created successfully
                  profile:
                    id: uuid
                    full_name: Dr. John Doe
                    verification_status: Pending
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid data provided
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Profile creation not allowed
          description: ''
  /api/psychologists/profile/certifications/:
    get:
      operationId: psychologists_profile_certifications_retrieve
      description: Update psychologist's certification entries
      tags:
      - Psychologist Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Certifications updated successfully
                example:
                  message: Certifications updated successfully
                  certifications:
                  - name: CBT Certification
                    institution: Institute
                    year: 2021
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid certification data
          description: ''
    patch:
      operationId: psychologists_profile_certifications_partial_update
      description: Update psychologist's certification entries
      tags:
      - Psychologist Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistCertificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistCertificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistCertificationRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Certifications updated successfully
                example:
                  message: Certifications updated successfully
                  certifications:
                  - name: CBT Certification
                    institution: Institute
                    year: 2021
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid certification data
          description: ''
  /api/psychologists/profile/completeness/:
    get:
      operationId: psychologists_profile_completeness_retrieve
      description: Get profile completeness score and verification status
      tags:
      - Psychologist Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Profile completeness information
                example:
                  profile_completeness: 85.5
                  verification_requirements:
                  - Office address required for initial consultations
                  can_book_appointments: true
                  is_marketplace_visible: false
          description: ''
  /api/psychologists/profile/education/:
    get:
      operationId: psychologists_profile_education_retrieve
      description: Update psychologist's education entries
      tags:
      - Psychologist Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Education updated successfully
                example:
                  message: Education updated successfully
                  education:
                  - degree: PhD Psychology
                    institution: University
                    year: 2020
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid education data
          description: ''
    patch:
      operationId: psychologists_profile_education_partial_update
      description: Update psychologist's education entries
      tags:
      - Psychologist Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistEducationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistEducationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistEducationRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Education updated successfully
                example:
                  message: Education updated successfully
                  education:
                  - degree: PhD Psychology
                    institution: University
                    year: 2020
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid education data
          description: ''
  /api/psychologists/profile/profile/:
    get:
      operationId: psychologists_profile_profile_retrieve
      description: Get current psychologist's profile with detailed information
      tags:
      - Psychologist Profile
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PsychologistDetail'
          description: ''
        '404':
          content:
            application/json:
              schema:
                description: Psychologist profile not found
          description: ''
  /api/psychologists/profile/update_profile/:
    patch:
      operationId: psychologists_profile_update_profile_partial_update
      description: Update current psychologist's profile
      tags:
      - Psychologist Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPsychologistProfileUpdateRequest'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Profile updated successfully
                example:
                  message: Profile updated successfully
                  profile:
                    id: uuid
                    full_name: Dr. John Doe
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Invalid data provided
          description: ''
        '403':
          content:
            application/json:
              schema:
                description: Profile update not allowed
          description: ''
  /api/users/:
    get:
      operationId: users_list
      description: List all users (Admin only)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - User Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: Retrieve a specific user (Admin only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
          description: Unique identifier for the user
        required: true
      tags:
      - User Management
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AppointmentCancellationRequest:
      type: object
      description: Serializer for appointment cancellation
      properties:
        cancellation_reason:
          type: string
          description: Reason for cancelling the appointment
          maxLength: 1000
    AppointmentCreateRequest:
      type: object
      description: Serializer for creating appointments (booking)
      properties:
        child:
          type: string
          format: uuid
          description: Unique identifier for the child
        psychologist:
          type: string
          format: uuid
          description: Psychologist providing the service
        session_type:
          allOf:
          - $ref: '#/components/schemas/SessionTypeF05Enum'
          description: |-
            Type of session: online or in-person consultation

            * `OnlineMeeting` - Online Session - 1 hour
            * `InitialConsultation` - Initial Consultation - 2 hours (In-Person)
        start_slot_id:
          type: integer
          writeOnly: true
          description: ID of the first slot to book (for consecutive booking)
        parent_notes:
          type: string
          description: Notes from parent about the appointment
      required:
      - child
      - psychologist
      - session_type
      - start_slot_id
    AppointmentDetail:
      type: object
      description: Extended serializer for detailed appointment information
      properties:
        appointment_id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the appointment
        child:
          allOf:
          - $ref: '#/components/schemas/ChildSummary'
          readOnly: true
        child_name:
          type: string
          readOnly: true
        psychologist:
          allOf:
          - $ref: '#/components/schemas/PsychologistSummary'
          readOnly: true
        psychologist_name:
          type: string
          readOnly: true
        parent:
          allOf:
          - $ref: '#/components/schemas/ParentSummary'
          readOnly: true
        parent_email:
          type: string
          format: email
          readOnly: true
        session_type:
          allOf:
          - $ref: '#/components/schemas/SessionTypeF05Enum'
          description: |-
            Type of session: online or in-person consultation

            * `OnlineMeeting` - Online Session - 1 hour
            * `InitialConsultation` - Initial Consultation - 2 hours (In-Person)
        appointment_status:
          allOf:
          - $ref: '#/components/schemas/AppointmentStatusEnum'
          default: Payment_Pending
          description: |-
            Current status of the appointment

            * `Payment_Pending` - Payment Pending
            * `Scheduled` - Scheduled
            * `In_Progress` - In Progress
            * `Completed` - Completed
            * `Cancelled` - Cancelled
            * `No_Show` - No Show
            * `Payment_Failed` - Payment Failed
        scheduled_start_time:
          type: string
          format: date-time
          description: When the appointment is scheduled to start
        scheduled_end_time:
          type: string
          format: date-time
          description: When the appointment is scheduled to end
        actual_start_time:
          type: string
          format: date-time
          nullable: true
          description: When the appointment actually started
        actual_end_time:
          type: string
          format: date-time
          nullable: true
          description: When the appointment actually ended
        meeting_address:
          type: string
          description: Address for in-person meetings (defaults from psychologist
            profile)
        meeting_link:
          type: string
          format: uri
          nullable: true
          description: Video meeting link for online sessions
          maxLength: 512
        meeting_id:
          type: string
          description: Meeting ID for video sessions
          maxLength: 100
        qr_verification_code:
          type: string
          nullable: true
          description: QR code for verifying in-person session attendance
          maxLength: 32
        session_verified_at:
          type: string
          format: date-time
          nullable: true
          description: When the session was verified via QR code
        parent_notes:
          type: string
          description: Notes from parent about the appointment
        psychologist_notes:
          type: string
          description: Private notes from psychologist
        cancellation_reason:
          type: string
          description: Reason for cancellation if cancelled
        duration_hours:
          type: integer
          readOnly: true
        is_upcoming:
          type: boolean
          readOnly: true
        is_past:
          type: boolean
          readOnly: true
        can_be_cancelled:
          type: boolean
          readOnly: true
        can_be_verified:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        appointment_slots:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentSlot'
          readOnly: true
        meeting_info:
          type: string
          readOnly: true
        verification_info:
          type: string
          readOnly: true
      required:
      - appointment_id
      - appointment_slots
      - can_be_cancelled
      - can_be_verified
      - child
      - child_name
      - created_at
      - duration_hours
      - is_past
      - is_upcoming
      - meeting_info
      - parent
      - parent_email
      - psychologist
      - psychologist_name
      - scheduled_end_time
      - scheduled_start_time
      - session_type
      - updated_at
      - verification_info
    AppointmentRequest:
      type: object
      description: Basic serializer for Appointment model
      properties:
        child:
          type: string
          format: uuid
          description: Child this appointment is for
        psychologist:
          type: string
          format: uuid
          description: Psychologist providing the service
        parent:
          type: string
          format: uuid
          description: Parent who booked the appointment
        session_type:
          allOf:
          - $ref: '#/components/schemas/SessionTypeF05Enum'
          description: |-
            Type of session: online or in-person consultation

            * `OnlineMeeting` - Online Session - 1 hour
            * `InitialConsultation` - Initial Consultation - 2 hours (In-Person)
        appointment_status:
          allOf:
          - $ref: '#/components/schemas/AppointmentStatusEnum'
          default: Payment_Pending
          description: |-
            Current status of the appointment

            * `Payment_Pending` - Payment Pending
            * `Scheduled` - Scheduled
            * `In_Progress` - In Progress
            * `Completed` - Completed
            * `Cancelled` - Cancelled
            * `No_Show` - No Show
            * `Payment_Failed` - Payment Failed
        scheduled_start_time:
          type: string
          format: date-time
          description: When the appointment is scheduled to start
        scheduled_end_time:
          type: string
          format: date-time
          description: When the appointment is scheduled to end
        actual_start_time:
          type: string
          format: date-time
          nullable: true
          description: When the appointment actually started
        actual_end_time:
          type: string
          format: date-time
          nullable: true
          description: When the appointment actually ended
        meeting_address:
          type: string
          description: Address for in-person meetings (defaults from psychologist
            profile)
        meeting_link:
          type: string
          format: uri
          nullable: true
          description: Video meeting link for online sessions
          maxLength: 512
        meeting_id:
          type: string
          description: Meeting ID for video sessions
          maxLength: 100
        qr_verification_code:
          type: string
          nullable: true
          description: QR code for verifying in-person session attendance
          maxLength: 32
        session_verified_at:
          type: string
          format: date-time
          nullable: true
          description: When the session was verified via QR code
        parent_notes:
          type: string
          description: Notes from parent about the appointment
        psychologist_notes:
          type: string
          description: Private notes from psychologist
        cancellation_reason:
          type: string
          description: Reason for cancellation if cancelled
      required:
      - child
      - parent
      - psychologist
      - scheduled_end_time
      - scheduled_start_time
      - session_type
    AppointmentSearchRequest:
      type: object
      description: Serializer for appointment search and filtering
      properties:
        date_from:
          type: string
          format: date
        date_to:
          type: string
          format: date
        appointment_status:
          $ref: '#/components/schemas/AppointmentStatusEnum'
        session_type:
          $ref: '#/components/schemas/SessionTypeF05Enum'
        child_id:
          type: string
          format: uuid
        psychologist_id:
          type: string
          format: uuid
        is_upcoming:
          type: boolean
        is_past:
          type: boolean
    AppointmentSlot:
      type: object
      description: Basic serializer for AppointmentSlot model
      properties:
        slot_id:
          type: integer
          readOnly: true
          description: Unique identifier for the appointment slot
        psychologist:
          type: string
          format: uuid
          description: Psychologist this slot belongs to
        psychologist_name:
          type: string
          readOnly: true
        availability_block:
          type: integer
          description: Availability block this slot was generated from
        slot_date:
          type: string
          format: date
          description: Date of this appointment slot
        start_time:
          type: string
          format: time
          description: Start time of this 1-hour slot
        end_time:
          type: string
          format: time
          description: End time of this 1-hour slot (start_time + 1 hour)
        is_booked:
          type: boolean
          default: false
          description: Whether this slot is currently booked
        datetime_start:
          type: string
          format: date-time
          readOnly: true
        datetime_end:
          type: string
          format: date-time
          readOnly: true
        is_available_for_booking:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - availability_block
      - created_at
      - datetime_end
      - datetime_start
      - end_time
      - is_available_for_booking
      - psychologist
      - psychologist_name
      - slot_date
      - slot_id
      - start_time
      - updated_at
    AppointmentSlotCreateRequest:
      type: object
      description: Serializer for creating appointment slots (system/admin use)
      properties:
        psychologist:
          type: string
          format: uuid
          description: Psychologist this slot belongs to
        availability_block:
          type: integer
          description: Availability block this slot was generated from
        slot_date:
          type: string
          format: date
          description: Date of this appointment slot
        start_time:
          type: string
          format: time
          description: Start time of this 1-hour slot
        end_time:
          type: string
          format: time
          description: End time of this 1-hour slot (start_time + 1 hour)
      required:
      - availability_block
      - end_time
      - psychologist
      - slot_date
      - start_time
    AppointmentSlotRequest:
      type: object
      description: Basic serializer for AppointmentSlot model
      properties:
        psychologist:
          type: string
          format: uuid
          description: Psychologist this slot belongs to
        availability_block:
          type: integer
          description: Availability block this slot was generated from
        slot_date:
          type: string
          format: date
          description: Date of this appointment slot
        start_time:
          type: string
          format: time
          description: Start time of this 1-hour slot
        end_time:
          type: string
          format: time
          description: End time of this 1-hour slot (start_time + 1 hour)
        is_booked:
          type: boolean
          default: false
          description: Whether this slot is currently booked
      required:
      - availability_block
      - end_time
      - psychologist
      - slot_date
      - start_time
    AppointmentStatusEnum:
      enum:
      - Payment_Pending
      - Scheduled
      - In_Progress
      - Completed
      - Cancelled
      - No_Show
      - Payment_Failed
      type: string
      description: |-
        * `Payment_Pending` - Payment Pending
        * `Scheduled` - Scheduled
        * `In_Progress` - In Progress
        * `Completed` - Completed
        * `Cancelled` - Cancelled
        * `No_Show` - No Show
        * `Payment_Failed` - Payment Failed
    AppointmentSummary:
      type: object
      description: Minimal serializer for appointment summary (listings, calendars,
        etc.)
      properties:
        appointment_id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the appointment
        child_name:
          type: string
          readOnly: true
        psychologist_name:
          type: string
          readOnly: true
        session_type:
          allOf:
          - $ref: '#/components/schemas/SessionTypeF05Enum'
          description: |-
            Type of session: online or in-person consultation

            * `OnlineMeeting` - Online Session - 1 hour
            * `InitialConsultation` - Initial Consultation - 2 hours (In-Person)
        appointment_status:
          allOf:
          - $ref: '#/components/schemas/AppointmentStatusEnum'
          default: Payment_Pending
          description: |-
            Current status of the appointment

            * `Payment_Pending` - Payment Pending
            * `Scheduled` - Scheduled
            * `In_Progress` - In Progress
            * `Completed` - Completed
            * `Cancelled` - Cancelled
            * `No_Show` - No Show
            * `Payment_Failed` - Payment Failed
        scheduled_start_time:
          type: string
          format: date-time
          description: When the appointment is scheduled to start
        scheduled_end_time:
          type: string
          format: date-time
          description: When the appointment is scheduled to end
        duration_hours:
          type: integer
          readOnly: true
        is_upcoming:
          type: boolean
          readOnly: true
        meeting_address:
          type: string
          description: Address for in-person meetings (defaults from psychologist
            profile)
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - appointment_id
      - child_name
      - created_at
      - duration_hours
      - is_upcoming
      - psychologist_name
      - scheduled_end_time
      - scheduled_start_time
      - session_type
    BulkConsentRequest:
      type: object
      description: Serializer for bulk consent operations
      properties:
        consent_types:
          type: array
          items:
            $ref: '#/components/schemas/ConsentTypesEnum'
          description: List of consent types to update
        granted:
          type: boolean
          description: Whether to grant or revoke all specified consents
        parent_signature:
          type: string
          description: Parent's digital signature
          maxLength: 255
        notes:
          type: string
          description: Notes for all consent updates
          maxLength: 1000
      required:
      - consent_types
      - granted
    CertificationEntryRequest:
      type: object
      description: Helper serializer for individual certification entries
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        institution:
          type: string
          minLength: 1
          maxLength: 200
        year:
          type: integer
          maximum: 2025
          minimum: 1950
        expiry_date:
          type: string
          maxLength: 20
        certification_id:
          type: string
          maxLength: 100
      required:
      - institution
      - name
      - year
    ChildCreateRequest:
      type: object
      description: Serializer for creating new child profiles
      properties:
        first_name:
          type: string
          minLength: 1
          description: Child's first name
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          description: Child's date of birth
        last_name:
          type: string
          description: Child's last name
          maxLength: 100
        nickname:
          type: string
          description: Child's preferred nickname
          maxLength: 100
        gender:
          type: string
          description: Child's gender identity
          maxLength: 50
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          title: Profile picture
          description: URL to child's profile picture
          maxLength: 512
        height_cm:
          type: integer
          maximum: 250
          minimum: 50
          nullable: true
          title: Height (cm)
          description: Child's height in centimeters
        weight_kg:
          type: integer
          maximum: 200
          minimum: 10
          nullable: true
          title: Weight (kg)
          description: Child's weight in kilograms
        health_status:
          type: string
          description: General health status or concerns
          maxLength: 255
        medical_history:
          type: string
          description: Relevant medical history
        vaccination_status:
          type: boolean
          nullable: true
          title: Vaccination up to date
          description: Whether child's vaccinations are current
        emotional_issues:
          type: string
          description: Any emotional concerns or challenges
        social_behavior:
          type: string
          description: Observations about social interactions
        developmental_concerns:
          type: string
          description: Any developmental concerns or delays
        family_peer_relationship:
          type: string
          title: Family and peer relationships
          description: How child relates to family and peers
        has_seen_psychologist:
          type: boolean
          default: false
          description: Whether child has previously seen a psychologist
        has_received_therapy:
          type: boolean
          default: false
          description: Whether child has received therapy services
        parental_goals:
          type: string
          description: Parent's goals for the child's development
        activity_tips:
          type: string
          description: Suggested activities or interventions
        parental_notes:
          type: string
          description: Additional notes from parent
        primary_language:
          type: string
          description: Child's primary language
          maxLength: 50
        school_grade_level:
          type: string
          description: Current grade level (international system)
          maxLength: 50
        consent_forms_signed:
          type: object
          additionalProperties: {}
          description: Record of signed consent forms
      required:
      - date_of_birth
      - first_name
    ChildDetail:
      type: object
      description: Extended serializer for detailed child information
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the child
        parent:
          allOf:
          - $ref: '#/components/schemas/ParentSummary'
          readOnly: true
        parent_email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          description: Child's first name
          maxLength: 100
        last_name:
          type: string
          description: Child's last name
          maxLength: 100
        nickname:
          type: string
          description: Child's preferred nickname
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          description: Child's date of birth
        gender:
          type: string
          description: Child's gender identity
          maxLength: 50
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          title: Profile picture
          description: URL to child's profile picture
          maxLength: 512
        height_cm:
          type: integer
          maximum: 250
          minimum: 50
          nullable: true
          title: Height (cm)
          description: Child's height in centimeters
        weight_kg:
          type: integer
          maximum: 200
          minimum: 10
          nullable: true
          title: Weight (kg)
          description: Child's weight in kilograms
        health_status:
          type: string
          description: General health status or concerns
          maxLength: 255
        medical_history:
          type: string
          description: Relevant medical history
        vaccination_status:
          type: boolean
          nullable: true
          title: Vaccination up to date
          description: Whether child's vaccinations are current
        emotional_issues:
          type: string
          description: Any emotional concerns or challenges
        social_behavior:
          type: string
          description: Observations about social interactions
        developmental_concerns:
          type: string
          description: Any developmental concerns or delays
        family_peer_relationship:
          type: string
          title: Family and peer relationships
          description: How child relates to family and peers
        has_seen_psychologist:
          type: boolean
          default: false
          description: Whether child has previously seen a psychologist
        has_received_therapy:
          type: boolean
          default: false
          description: Whether child has received therapy services
        parental_goals:
          type: string
          description: Parent's goals for the child's development
        activity_tips:
          type: string
          description: Suggested activities or interventions
        parental_notes:
          type: string
          description: Additional notes from parent
        primary_language:
          type: string
          description: Child's primary language
          maxLength: 50
        school_grade_level:
          type: string
          description: Current grade level (international system)
          maxLength: 50
        consent_forms_signed:
          type: object
          additionalProperties: {}
          description: Record of signed consent forms
        age:
          type: integer
          readOnly: true
        age_in_months:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        bmi:
          type: number
          format: double
          readOnly: true
        has_psychology_history:
          type: boolean
          readOnly: true
        is_vaccination_current:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        profile_completeness:
          type: string
          readOnly: true
        age_appropriate_grades:
          type: string
          readOnly: true
        consent_summary:
          type: string
          readOnly: true
      required:
      - age
      - age_appropriate_grades
      - age_in_months
      - bmi
      - consent_summary
      - created_at
      - date_of_birth
      - display_name
      - first_name
      - full_name
      - has_psychology_history
      - id
      - is_vaccination_current
      - parent
      - parent_email
      - profile_completeness
      - updated_at
    ChildSearchRequest:
      type: object
      description: Serializer for child search/filtering
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          maxLength: 100
        parent_email:
          type: string
          format: email
          minLength: 1
        age_min:
          type: integer
          maximum: 17
          minimum: 5
        age_max:
          type: integer
          maximum: 17
          minimum: 5
        gender:
          type: string
          minLength: 1
          maxLength: 50
        school_grade_level:
          type: string
          minLength: 1
          maxLength: 50
        has_psychology_history:
          type: boolean
        created_after:
          type: string
          format: date-time
        created_before:
          type: string
          format: date-time
    ChildSummary:
      type: object
      description: Minimal serializer for child summary (for listings, selections,
        etc.)
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the child
        parent:
          type: string
          format: uuid
          description: Parent this child belongs to
          readOnly: true
        parent_email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          description: Child's first name
          maxLength: 100
        last_name:
          type: string
          description: Child's last name
          maxLength: 100
        nickname:
          type: string
          description: Child's preferred nickname
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        date_of_birth:
          type: string
          format: date
          description: Child's date of birth
        age:
          type: integer
          readOnly: true
        gender:
          type: string
          description: Child's gender identity
          maxLength: 50
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          title: Profile picture
          description: URL to child's profile picture
          maxLength: 512
        school_grade_level:
          type: string
          description: Current grade level (international system)
          maxLength: 50
      required:
      - age
      - date_of_birth
      - display_name
      - first_name
      - full_name
      - id
      - parent
      - parent_email
    CommunicationPreferences:
      type: object
      description: Dedicated serializer for communication preferences
      properties:
        email_notifications:
          type: boolean
          default: true
        sms_notifications:
          type: boolean
          default: false
        appointment_reminders:
          type: boolean
          default: true
        reminder_timing:
          allOf:
          - $ref: '#/components/schemas/ReminderTimingEnum'
          default: 24_hours
        growth_plan_updates:
          type: boolean
          default: true
        new_message_alerts:
          type: boolean
          default: true
        marketing_emails:
          type: boolean
          default: false
    ConsentManagementRequest:
      type: object
      description: Dedicated serializer for managing consent forms
      properties:
        consent_type:
          allOf:
          - $ref: '#/components/schemas/ConsentTypeEnum'
          description: |-
            Type of consent being granted/revoked

            * `service_consent` - General psychological services
            * `assessment_consent` - Psychological testing and evaluation
            * `communication_consent` - Communication with other providers
            * `data_sharing_consent` - Sharing of assessment results
        granted:
          type: boolean
          description: Whether consent is granted
        parent_signature:
          type: string
          description: Parent's digital signature or confirmation
          maxLength: 255
        notes:
          type: string
          description: Additional notes about the consent
          maxLength: 1000
      required:
      - consent_type
      - granted
    ConsentTypeEnum:
      enum:
      - service_consent
      - assessment_consent
      - communication_consent
      - data_sharing_consent
      type: string
      description: |-
        * `service_consent` - General psychological services
        * `assessment_consent` - Psychological testing and evaluation
        * `communication_consent` - Communication with other providers
        * `data_sharing_consent` - Sharing of assessment results
    ConsentTypesEnum:
      enum:
      - service_consent
      - assessment_consent
      - communication_consent
      - data_sharing_consent
      type: string
      description: |-
        * `service_consent` - General psychological services
        * `assessment_consent` - Psychological testing and evaluation
        * `communication_consent` - Communication with other providers
        * `data_sharing_consent` - Sharing of assessment results
    CreateAppointmentOrderRequest:
      type: object
      description: Serializer for creating appointment booking orders
      properties:
        psychologist_id:
          type: string
          format: uuid
          description: ID of the psychologist for the appointment
        session_type:
          allOf:
          - $ref: '#/components/schemas/CreateAppointmentOrderSessionTypeEnum'
          description: |-
            Type of session to book

            * `online_session` - online_session
            * `initial_consultation` - initial_consultation
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency91dEnum'
          default: USD
          description: |-
            Currency for the payment

            * `USD` - USD
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          default: stripe
          description: |-
            Payment provider to use

            * `stripe` - stripe
      required:
      - psychologist_id
      - session_type
    CreateAppointmentOrderSessionTypeEnum:
      enum:
      - online_session
      - initial_consultation
      type: string
      description: |-
        * `online_session` - online_session
        * `initial_consultation` - initial_consultation
    CreateAppointmentOrderWithReservationRequest:
      type: object
      description: Serializer for creating appointment booking orders WITH reservation
      properties:
        psychologist_id:
          type: string
          format: uuid
          description: ID of the psychologist for the appointment
        child_id:
          type: string
          format: uuid
          description: ID of the child for the appointment
        session_type:
          allOf:
          - $ref: '#/components/schemas/SessionTypeF05Enum'
          description: |-
            Type of session to book

            * `OnlineMeeting` - OnlineMeeting
            * `InitialConsultation` - InitialConsultation
        start_slot_id:
          type: integer
          description: ID of the starting appointment slot
        parent_notes:
          type: string
          description: Optional notes from parent
          maxLength: 1000
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency91dEnum'
          default: USD
          description: |-
            Currency for the payment

            * `USD` - USD
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          default: stripe
          description: |-
            Payment provider to use

            * `stripe` - stripe
      required:
      - child_id
      - psychologist_id
      - session_type
      - start_slot_id
    CreateRegistrationOrderRequest:
      type: object
      description: Serializer for creating psychologist registration orders
      properties:
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency91dEnum'
          default: USD
          description: |-
            Currency for the payment

            * `USD` - USD
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          default: stripe
          description: |-
            Payment provider to use

            * `stripe` - stripe
    Currency60dEnum:
      enum:
      - USD
      - EUR
      - GBP
      type: string
      description: |-
        * `USD` - US Dollar
        * `EUR` - Euro
        * `GBP` - British Pound
    Currency91dEnum:
      enum:
      - USD
      type: string
      description: '* `USD` - USD'
    EducationEntryRequest:
      type: object
      description: Helper serializer for individual education entries
      properties:
        degree:
          type: string
          minLength: 1
          maxLength: 200
        institution:
          type: string
          minLength: 1
          maxLength: 200
        year:
          type: integer
          maximum: 2025
          minimum: 1950
        field_of_study:
          type: string
          maxLength: 200
        honors:
          type: string
          maxLength: 200
      required:
      - degree
      - institution
      - year
    FacebookAuthRequest:
      type: object
      description: |-
        Serializer for Facebook OAuth authentication.
        Handles both login and registration cases.
      properties:
        facebook_token:
          type: string
          minLength: 1
          description: Facebook access token obtained from Facebook SDK
          maxLength: 2048
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          description: |-
            Required for new user registration: Parent, Psychologist, or Admin

            * `Parent` - Parent
            * `Psychologist` - Psychologist
            * `Admin` - Admin
      required:
      - facebook_token
    FacebookLinkAccountRequest:
      type: object
      description: |-
        Serializer for linking existing account with Facebook.
        Used when user wants to add Facebook auth to existing account.
      properties:
        facebook_token:
          type: string
          minLength: 1
          description: Facebook access token to link with current account
          maxLength: 2048
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Current account password for verification
      required:
      - facebook_token
      - password
    FacebookUnlinkAccountRequest:
      type: object
      description: Serializer for unlinking Facebook from account.
      properties:
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Current account password for verification
      required:
      - password
    GoogleAuthRequest:
      type: object
      description: |-
        Serializer for Google OAuth token validation.
        Handles input validation only - business logic in service layer.
      properties:
        google_token:
          type: string
          minLength: 1
          description: Google ID token from client-side OAuth flow
          maxLength: 2048
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          description: |-
            Required for new user registration: Parent, Psychologist, or Admin

            * `Parent` - Parent
            * `Psychologist` - Psychologist
            * `Admin` - Admin
      required:
      - google_token
    GoogleLinkAccountRequest:
      type: object
      description: |-
        Serializer for linking existing account with Google.
        Used when user wants to add Google auth to existing account.
      properties:
        google_token:
          type: string
          minLength: 1
          description: Google ID token to link with current account
          maxLength: 2048
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Current account password for verification
      required:
      - google_token
      - password
    GoogleUnlinkAccountRequest:
      type: object
      description: Serializer for unlinking Google from account.
      properties:
        password:
          type: string
          writeOnly: true
          minLength: 1
          description: Current account password for verification
      required:
      - password
    InitiatePaymentRequest:
      type: object
      description: Serializer for initiating payment for an order
      properties:
        success_url:
          type: string
          format: uri
          minLength: 1
          description: URL to redirect to after successful payment
        cancel_url:
          type: string
          format: uri
          minLength: 1
          description: URL to redirect to after cancelled payment
        provider:
          allOf:
          - $ref: '#/components/schemas/ProviderEnum'
          description: |-
            Payment provider to use (optional, defaults to order's provider)

            * `stripe` - stripe
      required:
      - cancel_url
      - success_url
    LoginRequest:
      type: object
      description: Serializer for user login
      properties:
        email:
          type: string
          format: email
          minLength: 1
          description: Your email address
        password:
          type: string
          minLength: 1
          description: Your password
      required:
      - email
      - password
    NoShowRequest:
      type: object
      description: Serializer for marking appointments as no-show
      properties:
        reason:
          type: string
          description: Optional reason for marking as no-show
          maxLength: 500
    Order:
      type: object
      description: Serializer for Order model
      properties:
        order_id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the order
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          description: |-
            Type of order: registration or appointment booking

            * `psychologist_registration` - Psychologist Registration
            * `appointment_booking` - Appointment Booking
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        psychologist:
          allOf:
          - $ref: '#/components/schemas/PsychologistSummary'
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          description: Order amount
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency60dEnum'
          readOnly: true
          description: |-
            Currency code

            * `USD` - US Dollar
            * `EUR` - Euro
            * `GBP` - British Pound
        status:
          allOf:
          - $ref: '#/components/schemas/Status86eEnum'
          readOnly: true
          description: |-
            Current order status

            * `pending` - Pending
            * `paid` - Paid
            * `failed` - Failed
            * `refunded` - Refunded
            * `cancelled` - Cancelled
            * `expired` - Expired
        payment_provider:
          allOf:
          - $ref: '#/components/schemas/PaymentProviderEnum'
          readOnly: true
          description: |-
            Payment provider used for this order

            * `stripe` - Stripe
            * `paypal` - PayPal
        description:
          type: string
          readOnly: true
          description: Order description
        display_description:
          type: string
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Additional order metadata
        expires_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When the order expires if not paid
        paid_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When the order was paid
        can_be_paid:
          type: boolean
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        is_pending:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - can_be_paid
      - created_at
      - currency
      - description
      - display_description
      - expires_at
      - is_expired
      - is_pending
      - metadata
      - order_id
      - order_type
      - paid_at
      - payment_provider
      - psychologist
      - status
      - updated_at
      - user
    OrderRequest:
      type: object
      description: Serializer for Order model
      properties:
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          description: |-
            Type of order: registration or appointment booking

            * `psychologist_registration` - Psychologist Registration
            * `appointment_booking` - Appointment Booking
      required:
      - order_type
    OrderSummary:
      type: object
      description: Summary serializer for orders (for listings)
      properties:
        order_id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the order
        order_type:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          description: |-
            Type of order: registration or appointment booking

            * `psychologist_registration` - Psychologist Registration
            * `appointment_booking` - Appointment Booking
        psychologist_name:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Order amount
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency60dEnum'
          default: USD
          description: |-
            Currency code

            * `USD` - US Dollar
            * `EUR` - Euro
            * `GBP` - British Pound
        status:
          allOf:
          - $ref: '#/components/schemas/Status86eEnum'
          default: pending
          description: |-
            Current order status

            * `pending` - Pending
            * `paid` - Paid
            * `failed` - Failed
            * `refunded` - Refunded
            * `cancelled` - Cancelled
            * `expired` - Expired
        display_description:
          type: string
          readOnly: true
        can_be_paid:
          type: boolean
          readOnly: true
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When the order expires if not paid
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - can_be_paid
      - created_at
      - display_description
      - order_id
      - order_type
      - psychologist_name
    OrderTypeEnum:
      enum:
      - psychologist_registration
      - appointment_booking
      type: string
      description: |-
        * `psychologist_registration` - Psychologist Registration
        * `appointment_booking` - Appointment Booking
    PaginatedAppointmentSlotList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentSlot'
    PaginatedAppointmentSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentSummary'
    PaginatedChildSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChildSummary'
    PaginatedOrderSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderSummary'
    PaginatedParentSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ParentSummary'
    PaginatedPaymentSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSummary'
    PaginatedPsychologistAvailabilityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PsychologistAvailability'
    PaginatedPsychologistMarketplaceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PsychologistMarketplace'
    PaginatedPsychologistSummaryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PsychologistSummary'
    PaginatedTransactionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    ParentDetail:
      type: object
      description: Extended serializer for detailed parent information
      properties:
        email:
          type: string
          format: email
          readOnly: true
        user_type:
          type: string
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        profile_picture_url:
          type: string
          format: uri
          readOnly: true
        first_name:
          type: string
          description: Parent's first name
          maxLength: 100
        last_name:
          type: string
          description: Parent's last name
          maxLength: 100
        phone_number:
          type: string
          description: Contact phone number
          pattern: ^[\+]?[\d\s\-\(\)\.]{10,20}$
          maxLength: 20
        address_line1:
          type: string
          title: Address line 1
          description: Street address, P.O. box, company name, c/o
          maxLength: 255
        address_line2:
          type: string
          title: Address line 2
          description: Apartment, suite, unit, building, floor, etc.
          maxLength: 255
        city:
          type: string
          description: City or town
          maxLength: 100
        state_province:
          type: string
          title: State/province
          description: State, province, or region
          maxLength: 100
        postal_code:
          type: string
          description: ZIP or postal code
          maxLength: 20
        country:
          type: string
          default: US
          description: Country
          maxLength: 50
        communication_preferences:
          type: object
          additionalProperties: {}
          description: Notification and communication preferences
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        full_address:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - created_at
      - display_name
      - email
      - first_name
      - full_address
      - full_name
      - is_verified
      - last_name
      - profile_picture_url
      - updated_at
      - user
      - user_type
    ParentSearchRequest:
      type: object
      description: Serializer for parent search/filtering
      properties:
        email:
          type: string
          format: email
          minLength: 1
        first_name:
          type: string
          minLength: 1
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          maxLength: 100
        city:
          type: string
          minLength: 1
          maxLength: 100
        state_province:
          type: string
          minLength: 1
          maxLength: 100
        country:
          type: string
          minLength: 1
          maxLength: 50
        is_verified:
          type: boolean
        created_after:
          type: string
          format: date-time
        created_before:
          type: string
          format: date-time
    ParentSummary:
      type: object
      description: Minimal serializer for parent summary (for listings, selections,
        etc.)
      properties:
        user:
          type: string
          format: uuid
          description: Link to the base user account
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        city:
          type: string
          description: City or town
          maxLength: 100
        state_province:
          type: string
          title: State/province
          description: State, province, or region
          maxLength: 100
        country:
          type: string
          default: US
          description: Country
          maxLength: 50
        profile_picture_url:
          type: string
          format: uri
          readOnly: true
      required:
      - display_name
      - email
      - full_name
      - profile_picture_url
      - user
    PasswordResetConfirmRequest:
      type: object
      description: Simplified serializer that delegates to AuthenticationService
      properties:
        uidb64:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 8
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - password_confirm
      - token
      - uidb64
    PasswordResetRequestRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedAppointmentUpdateRequest:
      type: object
      description: Serializer for updating appointments (limited fields)
      properties:
        parent_notes:
          type: string
          description: Notes from parent about the appointment
        psychologist_notes:
          type: string
          description: Private notes from psychologist
        cancellation_reason:
          type: string
          description: Reason for cancellation if cancelled
    PatchedChildUpdateRequest:
      type: object
      description: Serializer for updating child profiles (excludes parent relationship)
      properties:
        first_name:
          type: string
          minLength: 1
          description: Child's first name
          maxLength: 100
        last_name:
          type: string
          description: Child's last name
          maxLength: 100
        nickname:
          type: string
          description: Child's preferred nickname
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          description: Child's date of birth
        gender:
          type: string
          description: Child's gender identity
          maxLength: 50
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          title: Profile picture
          description: URL to child's profile picture
          maxLength: 512
        height_cm:
          type: integer
          maximum: 250
          minimum: 50
          nullable: true
          title: Height (cm)
          description: Child's height in centimeters
        weight_kg:
          type: integer
          maximum: 200
          minimum: 10
          nullable: true
          title: Weight (kg)
          description: Child's weight in kilograms
        health_status:
          type: string
          description: General health status or concerns
          maxLength: 255
        medical_history:
          type: string
          description: Relevant medical history
        vaccination_status:
          type: boolean
          nullable: true
          title: Vaccination up to date
          description: Whether child's vaccinations are current
        emotional_issues:
          type: string
          description: Any emotional concerns or challenges
        social_behavior:
          type: string
          description: Observations about social interactions
        developmental_concerns:
          type: string
          description: Any developmental concerns or delays
        family_peer_relationship:
          type: string
          title: Family and peer relationships
          description: How child relates to family and peers
        has_seen_psychologist:
          type: boolean
          default: false
          description: Whether child has previously seen a psychologist
        has_received_therapy:
          type: boolean
          default: false
          description: Whether child has received therapy services
        parental_goals:
          type: string
          description: Parent's goals for the child's development
        activity_tips:
          type: string
          description: Suggested activities or interventions
        parental_notes:
          type: string
          description: Additional notes from parent
        primary_language:
          type: string
          description: Child's primary language
          maxLength: 50
        school_grade_level:
          type: string
          description: Current grade level (international system)
          maxLength: 50
        consent_forms_signed:
          type: object
          additionalProperties: {}
          description: Record of signed consent forms
    PatchedCommunicationPreferencesRequest:
      type: object
      description: Dedicated serializer for communication preferences
      properties:
        email_notifications:
          type: boolean
          default: true
        sms_notifications:
          type: boolean
          default: false
        appointment_reminders:
          type: boolean
          default: true
        reminder_timing:
          allOf:
          - $ref: '#/components/schemas/ReminderTimingEnum'
          default: 24_hours
        growth_plan_updates:
          type: boolean
          default: true
        new_message_alerts:
          type: boolean
          default: true
        marketing_emails:
          type: boolean
          default: false
    PatchedParentProfileUpdateRequest:
      type: object
      description: Serializer for updating parent profile (excludes sensitive fields)
      properties:
        profile_picture_url:
          type: string
          format: uri
        first_name:
          type: string
          minLength: 1
          description: Parent's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Parent's last name
          maxLength: 100
        phone_number:
          type: string
          description: Contact phone number
          pattern: ^[\+]?[\d\s\-\(\)\.]{10,20}$
          maxLength: 20
        address_line1:
          type: string
          title: Address line 1
          description: Street address, P.O. box, company name, c/o
          maxLength: 255
        address_line2:
          type: string
          title: Address line 2
          description: Apartment, suite, unit, building, floor, etc.
          maxLength: 255
        city:
          type: string
          description: City or town
          maxLength: 100
        state_province:
          type: string
          title: State/province
          description: State, province, or region
          maxLength: 100
        postal_code:
          type: string
          description: ZIP or postal code
          maxLength: 20
        country:
          type: string
          default: US
          description: Country
          maxLength: 50
        communication_preferences:
          type: object
          additionalProperties: {}
          description: Notification and communication preferences
    PatchedPsychologistAvailabilityRequest:
      type: object
      description: Serializer for managing psychologist availability blocks
      properties:
        psychologist:
          type: string
          format: uuid
          description: Psychologist this availability belongs to
        day_of_week:
          type: integer
          maximum: 6
          minimum: 0
          description: 'Day of week: 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday,
            5=Friday, 6=Saturday'
        start_time:
          type: string
          format: time
          description: Start time of availability block
        end_time:
          type: string
          format: time
          description: End time of availability block
        is_recurring:
          type: boolean
          default: true
          description: Whether this availability repeats weekly
        specific_date:
          type: string
          format: date
          nullable: true
          description: For non-recurring availability overrides on specific dates
    PatchedPsychologistCertificationRequest:
      type: object
      description: Dedicated serializer for managing certification entries
      properties:
        certifications:
          type: array
          items:
            $ref: '#/components/schemas/CertificationEntryRequest'
    PatchedPsychologistEducationRequest:
      type: object
      description: Dedicated serializer for managing education entries
      properties:
        education:
          type: array
          items:
            $ref: '#/components/schemas/EducationEntryRequest'
    PatchedPsychologistProfileUpdateRequest:
      type: object
      description: |-
        Serializer for psychologists to update their own profiles
        Excludes verification status and admin notes (only admins can edit these)
      properties:
        first_name:
          type: string
          minLength: 1
          description: Psychologist's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Psychologist's last name
          maxLength: 100
        profile_picture_url:
          type: string
          format: uri
          description: Optional profile picture URL
        license_number:
          type: string
          minLength: 1
          description: Professional license number
          maxLength: 100
        license_issuing_authority:
          type: string
          minLength: 1
          description: Authority that issued the license
          maxLength: 255
        license_expiry_date:
          type: string
          format: date
          description: When the license expires
        years_of_experience:
          type: integer
          maximum: 60
          minimum: 0
          description: Total years of professional experience
        biography:
          type: string
          description: Professional biography and approach
        education:
          type: object
          additionalProperties: {}
          description: Educational background (degree, institution, year)
        certifications:
          type: object
          additionalProperties: {}
          description: Professional certifications (name, institution, year)
        offers_initial_consultation:
          type: boolean
          default: true
          description: Offers 2-hour in-person initial consultations
        offers_online_sessions:
          type: boolean
          default: true
          description: Offers 1-hour online video sessions
        office_address:
          type: string
          description: Complete office address for in-person consultations
        website_url:
          type: string
          format: uri
          description: Professional website URL
          maxLength: 512
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn profile URL
          maxLength: 512
        hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Hourly rate in USD for online sessions
        initial_consultation_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Rate for 2-hour initial consultation
    PatchedUserRequest:
      type: object
      description: Basic serializer for User model - returns user data
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          description: User's email address, used for login
          maxLength: 254
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          description: |-
            Type of user: Parent, Psychologist, or Admin

            * `Parent` - Parent
            * `Psychologist` - Psychologist
            * `Admin` - Admin
        is_active:
          type: boolean
          default: true
          title: Active
          description: Designates whether this user should be treated as active.
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          title: Profile picture
          description: URL to user's profile picture
          maxLength: 512
        user_timezone:
          type: string
          minLength: 1
          default: UTC
          title: Timezone
          description: User's timezone for scheduling appointments
          maxLength: 50
    Payment:
      type: object
      description: Serializer for Payment model
      properties:
        payment_id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the payment
        order:
          allOf:
          - $ref: '#/components/schemas/Order'
          readOnly: true
        provider_payment_id:
          type: string
          readOnly: true
          description: Payment ID from payment provider (Stripe, PayPal, etc.)
        provider_payment_intent_id:
          type: string
          readOnly: true
          nullable: true
          description: Payment intent ID from provider (for Stripe)
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          readOnly: true
          description: |-
            Method used for payment

            * `card` - Credit/Debit Card
            * `paypal` - PayPal
            * `bank_transfer` - Bank Transfer
            * `digital_wallet` - Digital Wallet
        status:
          allOf:
          - $ref: '#/components/schemas/Status0b8Enum'
          readOnly: true
          description: |-
            Current payment status

            * `pending` - Pending
            * `processing` - Processing
            * `succeeded` - Succeeded
            * `failed` - Failed
            * `cancelled` - Cancelled
            * `refunded` - Refunded
            * `partially_refunded` - Partially Refunded
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          description: Payment amount
        currency:
          type: string
          readOnly: true
          description: Currency code
        refunded_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          description: Amount that has been refunded
        failure_reason:
          type: string
          readOnly: true
          nullable: true
          description: Reason for payment failure
        processed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When the payment was processed by provider
        is_successful:
          type: boolean
          readOnly: true
        can_be_refunded:
          type: boolean
          readOnly: true
        remaining_refundable_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - can_be_refunded
      - created_at
      - currency
      - failure_reason
      - is_successful
      - order
      - payment_id
      - payment_method
      - processed_at
      - provider_payment_id
      - provider_payment_intent_id
      - refunded_amount
      - remaining_refundable_amount
      - status
      - updated_at
    PaymentMethodEnum:
      enum:
      - card
      - paypal
      - bank_transfer
      - digital_wallet
      type: string
      description: |-
        * `card` - Credit/Debit Card
        * `paypal` - PayPal
        * `bank_transfer` - Bank Transfer
        * `digital_wallet` - Digital Wallet
    PaymentProviderEnum:
      enum:
      - stripe
      - paypal
      type: string
      description: |-
        * `stripe` - Stripe
        * `paypal` - PayPal
    PaymentStatusRequest:
      type: object
      description: Serializer for payment status updates
      properties:
        payment_intent_id:
          type: string
          minLength: 1
          description: Payment intent ID from provider
      required:
      - payment_intent_id
    PaymentSummary:
      type: object
      description: Summary serializer for payments (for listings)
      properties:
        payment_id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the payment
        order_type:
          type: string
          readOnly: true
        psychologist_name:
          type: string
          readOnly: true
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          description: |-
            Method used for payment

            * `card` - Credit/Debit Card
            * `paypal` - PayPal
            * `bank_transfer` - Bank Transfer
            * `digital_wallet` - Digital Wallet
        status:
          allOf:
          - $ref: '#/components/schemas/Status0b8Enum'
          default: pending
          description: |-
            Current payment status

            * `pending` - Pending
            * `processing` - Processing
            * `succeeded` - Succeeded
            * `failed` - Failed
            * `cancelled` - Cancelled
            * `refunded` - Refunded
            * `partially_refunded` - Partially Refunded
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Payment amount
        currency:
          type: string
          description: Currency code
          maxLength: 3
        processed_at:
          type: string
          format: date-time
          nullable: true
          description: When the payment was processed by provider
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - currency
      - order_type
      - payment_id
      - payment_method
      - psychologist_name
    ProviderEnum:
      enum:
      - stripe
      type: string
      description: '* `stripe` - stripe'
    PsychologistAvailability:
      type: object
      description: Serializer for managing psychologist availability blocks
      properties:
        availability_id:
          type: integer
          readOnly: true
          description: Unique identifier for availability block
        psychologist:
          type: string
          format: uuid
          description: Psychologist this availability belongs to
        psychologist_name:
          type: string
          readOnly: true
        day_of_week:
          type: integer
          maximum: 6
          minimum: 0
          description: 'Day of week: 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday,
            5=Friday, 6=Saturday'
        day_name:
          type: string
          readOnly: true
        start_time:
          type: string
          format: time
          description: Start time of availability block
        end_time:
          type: string
          format: time
          description: End time of availability block
        time_range_display:
          type: string
          readOnly: true
        is_recurring:
          type: boolean
          default: true
          description: Whether this availability repeats weekly
        specific_date:
          type: string
          format: date
          nullable: true
          description: For non-recurring availability overrides on specific dates
        display_date:
          type: string
          readOnly: true
        duration_hours:
          type: number
          format: double
          readOnly: true
        max_appointable_slots:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - availability_id
      - created_at
      - day_name
      - day_of_week
      - display_date
      - duration_hours
      - end_time
      - max_appointable_slots
      - psychologist
      - psychologist_name
      - specific_date
      - start_time
      - time_range_display
      - updated_at
    PsychologistAvailabilityRequest:
      type: object
      description: Serializer for managing psychologist availability blocks
      properties:
        psychologist:
          type: string
          format: uuid
          description: Psychologist this availability belongs to
        day_of_week:
          type: integer
          maximum: 6
          minimum: 0
          description: 'Day of week: 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday,
            5=Friday, 6=Saturday'
        start_time:
          type: string
          format: time
          description: Start time of availability block
        end_time:
          type: string
          format: time
          description: End time of availability block
        is_recurring:
          type: boolean
          default: true
          description: Whether this availability repeats weekly
        specific_date:
          type: string
          format: date
          nullable: true
          description: For non-recurring availability overrides on specific dates
      required:
      - day_of_week
      - end_time
      - psychologist
      - specific_date
      - start_time
    PsychologistDetail:
      type: object
      description: |-
        Extended serializer for detailed psychologist information
        Includes comprehensive profile with computed fields
      properties:
        email:
          type: string
          format: email
          readOnly: true
        user_type:
          type: string
          readOnly: true
        is_user_verified:
          type: boolean
          readOnly: true
        is_user_active:
          type: boolean
          readOnly: true
        profile_picture_url:
          type: string
          format: uri
          readOnly: true
        first_name:
          type: string
          description: Psychologist's first name
          maxLength: 100
        last_name:
          type: string
          description: Psychologist's last name
          maxLength: 100
        license_number:
          type: string
          description: Professional license number
          maxLength: 100
        license_issuing_authority:
          type: string
          description: Authority that issued the license
          maxLength: 255
        license_expiry_date:
          type: string
          format: date
          description: When the license expires
        years_of_experience:
          type: integer
          maximum: 60
          minimum: 0
          description: Total years of professional experience
        biography:
          type: string
          description: Professional biography and approach
        education:
          type: object
          additionalProperties: {}
          description: Educational background (degree, institution, year)
        certifications:
          type: object
          additionalProperties: {}
          description: Professional certifications (name, institution, year)
        verification_status:
          allOf:
          - $ref: '#/components/schemas/VerificationStatusEnum'
          default: Pending
          description: |-
            Current verification status

            * `Pending` - Pending
            * `Approved` - Approved
            * `Rejected` - Rejected
        admin_notes:
          type: string
          description: Internal notes for verification process
        offers_initial_consultation:
          type: boolean
          default: true
          description: Offers 2-hour in-person initial consultations
        offers_online_sessions:
          type: boolean
          default: true
          description: Offers 1-hour online video sessions
        office_address:
          type: string
          description: Complete office address for in-person consultations
        website_url:
          type: string
          format: uri
          description: Professional website URL
          maxLength: 512
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn profile URL
          maxLength: 512
        pricing:
          type: string
          readOnly: true
        hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Hourly rate in USD for online sessions
        initial_consultation_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Rate for 2-hour initial consultation
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        is_marketplace_visible:
          type: boolean
          readOnly: true
        license_is_valid:
          type: boolean
          readOnly: true
        services_offered:
          type: array
          items: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        profile_completeness:
          type: string
          readOnly: true
        verification_requirements:
          type: string
          readOnly: true
        can_book_appointments:
          type: string
          readOnly: true
      required:
      - can_book_appointments
      - created_at
      - display_name
      - email
      - first_name
      - full_name
      - is_marketplace_visible
      - is_user_active
      - is_user_verified
      - is_verified
      - last_name
      - license_expiry_date
      - license_is_valid
      - license_issuing_authority
      - license_number
      - pricing
      - profile_completeness
      - profile_picture_url
      - services_offered
      - updated_at
      - user
      - user_type
      - verification_requirements
      - years_of_experience
    PsychologistMarketplace:
      type: object
      description: |-
        Public-facing serializer for marketplace display
        Only includes public information, filters sensitive data
      properties:
        user:
          type: string
          format: uuid
          description: Link to the base user account
          readOnly: true
        full_name:
          type: string
          readOnly: true
        profile_picture_url:
          type: string
          format: uri
          readOnly: true
        years_of_experience:
          type: integer
          maximum: 60
          minimum: 0
          description: Total years of professional experience
        biography:
          type: string
          description: Professional biography and approach
        offers_initial_consultation:
          type: boolean
          default: true
          description: Offers 2-hour in-person initial consultations
        offers_online_sessions:
          type: boolean
          default: true
          description: Offers 1-hour online video sessions
        services_offered:
          type: array
          items: {}
          readOnly: true
        office_address:
          type: string
          description: Complete office address for in-person consultations
        website_url:
          type: string
          format: uri
          description: Professional website URL
          maxLength: 512
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn profile URL
          maxLength: 512
        hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Hourly rate in USD for online sessions
        initial_consultation_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Rate for 2-hour initial consultation
        pricing:
          type: string
          readOnly: true
        profile_completeness:
          type: string
          readOnly: true
        license_issuing_authority:
          type: string
          description: Authority that issued the license
          maxLength: 255
        education:
          type: object
          additionalProperties: {}
          description: Educational background (degree, institution, year)
        certifications:
          type: object
          additionalProperties: {}
          description: Professional certifications (name, institution, year)
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - full_name
      - license_issuing_authority
      - pricing
      - profile_completeness
      - profile_picture_url
      - services_offered
      - user
      - years_of_experience
    PsychologistProfileUpdateRequest:
      type: object
      description: |-
        Serializer for psychologists to update their own profiles
        Excludes verification status and admin notes (only admins can edit these)
      properties:
        first_name:
          type: string
          minLength: 1
          description: Psychologist's first name
          maxLength: 100
        last_name:
          type: string
          minLength: 1
          description: Psychologist's last name
          maxLength: 100
        profile_picture_url:
          type: string
          format: uri
          description: Optional profile picture URL
        license_number:
          type: string
          minLength: 1
          description: Professional license number
          maxLength: 100
        license_issuing_authority:
          type: string
          minLength: 1
          description: Authority that issued the license
          maxLength: 255
        license_expiry_date:
          type: string
          format: date
          description: When the license expires
        years_of_experience:
          type: integer
          maximum: 60
          minimum: 0
          description: Total years of professional experience
        biography:
          type: string
          description: Professional biography and approach
        education:
          type: object
          additionalProperties: {}
          description: Educational background (degree, institution, year)
        certifications:
          type: object
          additionalProperties: {}
          description: Professional certifications (name, institution, year)
        offers_initial_consultation:
          type: boolean
          default: true
          description: Offers 2-hour in-person initial consultations
        offers_online_sessions:
          type: boolean
          default: true
          description: Offers 1-hour online video sessions
        office_address:
          type: string
          description: Complete office address for in-person consultations
        website_url:
          type: string
          format: uri
          description: Professional website URL
          maxLength: 512
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn profile URL
          maxLength: 512
        hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Hourly rate in USD for online sessions
        initial_consultation_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Rate for 2-hour initial consultation
      required:
      - first_name
      - last_name
      - license_expiry_date
      - license_issuing_authority
      - license_number
      - years_of_experience
    PsychologistSearchRequest:
      type: object
      description: Serializer for search and filtering parameters
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        bio_keywords:
          type: string
          minLength: 1
          maxLength: 500
        offers_online_sessions:
          type: boolean
        offers_initial_consultation:
          type: boolean
        min_years_experience:
          type: integer
          maximum: 60
          minimum: 0
        max_years_experience:
          type: integer
          maximum: 60
          minimum: 0
        license_authority:
          type: string
          minLength: 1
          maxLength: 255
        location_keywords:
          type: string
          minLength: 1
          maxLength: 500
        verification_status:
          $ref: '#/components/schemas/VerificationStatusEnum'
        min_hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        max_hourly_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        min_consultation_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        max_consultation_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_after:
          type: string
          format: date-time
        created_before:
          type: string
          format: date-time
    PsychologistSummary:
      type: object
      description: Minimal serializer for psychologist summary (listings, selections,
        etc.)
      properties:
        user:
          type: string
          format: uuid
          description: Link to the base user account
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        full_name:
          type: string
          readOnly: true
        profile_picture_url:
          type: string
          format: uri
          readOnly: true
        years_of_experience:
          type: integer
          maximum: 60
          minimum: 0
          description: Total years of professional experience
        verification_status:
          allOf:
          - $ref: '#/components/schemas/VerificationStatusEnum'
          default: Pending
          description: |-
            Current verification status

            * `Pending` - Pending
            * `Approved` - Approved
            * `Rejected` - Rejected
        offers_initial_consultation:
          type: boolean
          default: true
          description: Offers 2-hour in-person initial consultations
        offers_online_sessions:
          type: boolean
          default: true
          description: Offers 1-hour online video sessions
        services_offered:
          type: array
          items: {}
          readOnly: true
        office_address:
          type: string
          description: Complete office address for in-person consultations
        pricing:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - full_name
      - pricing
      - profile_picture_url
      - services_offered
      - user
      - years_of_experience
    PsychologistSummaryRequest:
      type: object
      description: Minimal serializer for psychologist summary (listings, selections,
        etc.)
      properties:
        years_of_experience:
          type: integer
          maximum: 60
          minimum: 0
          description: Total years of professional experience
        verification_status:
          allOf:
          - $ref: '#/components/schemas/VerificationStatusEnum'
          default: Pending
          description: |-
            Current verification status

            * `Pending` - Pending
            * `Approved` - Approved
            * `Rejected` - Rejected
        offers_initial_consultation:
          type: boolean
          default: true
          description: Offers 2-hour in-person initial consultations
        offers_online_sessions:
          type: boolean
          default: true
          description: Offers 1-hour online video sessions
        office_address:
          type: string
          description: Complete office address for in-person consultations
      required:
      - years_of_experience
    QRVerificationRequest:
      type: object
      description: Dedicated serializer for QR code verification
      properties:
        qr_code:
          type: string
          minLength: 1
          description: QR verification code scanned by parent
          maxLength: 32
      required:
      - qr_code
    ReasonEnum:
      enum:
      - requested_by_customer
      - duplicate
      - fraudulent
      - subscription_canceled
      - product_unsatisfactory
      - other
      type: string
      description: |-
        * `requested_by_customer` - Requested by customer
        * `duplicate` - Duplicate payment
        * `fraudulent` - Fraudulent payment
        * `subscription_canceled` - Subscription canceled
        * `product_unsatisfactory` - Product unsatisfactory
        * `other` - Other
    RefundPaymentRequest:
      type: object
      description: Serializer for processing payment refunds
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Refund amount (leave empty for full refund)
        reason:
          allOf:
          - $ref: '#/components/schemas/ReasonEnum'
          default: requested_by_customer
          description: |-
            Reason for the refund

            * `requested_by_customer` - Requested by customer
            * `duplicate` - Duplicate payment
            * `fraudulent` - Fraudulent payment
            * `subscription_canceled` - Subscription canceled
            * `product_unsatisfactory` - Product unsatisfactory
            * `other` - Other
    ReminderTimingEnum:
      enum:
      - 24_hours
      - 2_hours
      - 30_minutes
      type: string
      description: |-
        * `24_hours` - 24 hours before
        * `2_hours` - 2 hours before
        * `30_minutes` - 30 minutes before
    SessionTypeF05Enum:
      enum:
      - OnlineMeeting
      - InitialConsultation
      type: string
      description: |-
        * `OnlineMeeting` - Online Session - 1 hour
        * `InitialConsultation` - Initial Consultation - 2 hours (In-Person)
    Status0b8Enum:
      enum:
      - pending
      - processing
      - succeeded
      - failed
      - cancelled
      - refunded
      - partially_refunded
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `succeeded` - Succeeded
        * `failed` - Failed
        * `cancelled` - Cancelled
        * `refunded` - Refunded
        * `partially_refunded` - Partially Refunded
    Status86eEnum:
      enum:
      - pending
      - paid
      - failed
      - refunded
      - cancelled
      - expired
      type: string
      description: |-
        * `pending` - Pending
        * `paid` - Paid
        * `failed` - Failed
        * `refunded` - Refunded
        * `cancelled` - Cancelled
        * `expired` - Expired
    Transaction:
      type: object
      description: Serializer for Transaction model
      properties:
        transaction_id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the transaction
        order:
          allOf:
          - $ref: '#/components/schemas/Order'
          readOnly: true
        payment:
          allOf:
          - $ref: '#/components/schemas/Payment'
          readOnly: true
        transaction_type:
          allOf:
          - $ref: '#/components/schemas/TransactionTypeEnum'
          readOnly: true
          description: |-
            Type of transaction

            * `order_created` - Order Created
            * `payment_initiated` - Payment Initiated
            * `payment_processing` - Payment Processing
            * `payment_succeeded` - Payment Succeeded
            * `payment_failed` - Payment Failed
            * `payment_cancelled` - Payment Cancelled
            * `refund_initiated` - Refund Initiated
            * `refund_succeeded` - Refund Succeeded
            * `refund_failed` - Refund Failed
            * `order_expired` - Order Expired
            * `webhook_received` - Webhook Received
            * `webhook_processed` - Webhook Processed
            * `status_change` - Status Change
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
          description: Transaction amount (if applicable)
        currency:
          type: string
          readOnly: true
          nullable: true
          description: Currency code (if applicable)
        previous_status:
          type: string
          readOnly: true
          nullable: true
          description: Previous status before change
        new_status:
          type: string
          readOnly: true
          nullable: true
          description: New status after change
        description:
          type: string
          readOnly: true
          description: Human-readable description of the transaction
        metadata:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Additional transaction metadata
        provider_reference:
          type: string
          readOnly: true
          nullable: true
          description: Reference ID from payment provider
        initiated_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        ip_address:
          type: string
          readOnly: true
          nullable: true
          description: IP address where transaction was initiated
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - currency
      - description
      - initiated_by
      - ip_address
      - metadata
      - new_status
      - order
      - payment
      - previous_status
      - provider_reference
      - transaction_id
      - transaction_type
    TransactionTypeEnum:
      enum:
      - order_created
      - payment_initiated
      - payment_processing
      - payment_succeeded
      - payment_failed
      - payment_cancelled
      - refund_initiated
      - refund_succeeded
      - refund_failed
      - order_expired
      - webhook_received
      - webhook_processed
      - status_change
      type: string
      description: |-
        * `order_created` - Order Created
        * `payment_initiated` - Payment Initiated
        * `payment_processing` - Payment Processing
        * `payment_succeeded` - Payment Succeeded
        * `payment_failed` - Payment Failed
        * `payment_cancelled` - Payment Cancelled
        * `refund_initiated` - Refund Initiated
        * `refund_succeeded` - Refund Succeeded
        * `refund_failed` - Refund Failed
        * `order_expired` - Order Expired
        * `webhook_received` - Webhook Received
        * `webhook_processed` - Webhook Processed
        * `status_change` - Status Change
    User:
      type: object
      description: Basic serializer for User model - returns user data
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Unique identifier for the user
        email:
          type: string
          format: email
          title: Email address
          description: User's email address, used for login
          maxLength: 254
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          description: |-
            Type of user: Parent, Psychologist, or Admin

            * `Parent` - Parent
            * `Psychologist` - Psychologist
            * `Admin` - Admin
        is_active:
          type: boolean
          default: true
          title: Active
          description: Designates whether this user should be treated as active.
        is_verified:
          type: boolean
          readOnly: true
          title: Verified
          description: Designates whether user has verified their email address.
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          title: Profile picture
          description: URL to user's profile picture
          maxLength: 512
        user_timezone:
          type: string
          default: UTC
          title: Timezone
          description: User's timezone for scheduling appointments
          maxLength: 50
        registration_date:
          type: string
          format: date-time
          readOnly: true
          description: When the user registered
        last_login_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Last login
          description: Last time user logged in
      required:
      - email
      - id
      - is_verified
      - last_login_date
      - registration_date
      - user_type
    UserRegistrationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          description: User's email address, used for login
          maxLength: 254
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          description: |-
            Type of user: Parent, Psychologist, or Admin

            * `Parent` - Parent
            * `Psychologist` - Psychologist
            * `Admin` - Admin
        password:
          type: string
          writeOnly: true
          minLength: 8
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
        user_timezone:
          type: string
          minLength: 1
          default: UTC
          title: Timezone
          description: User's timezone for scheduling appointments
          maxLength: 50
      required:
      - email
      - password
      - password_confirm
      - user_type
    UserRequest:
      type: object
      description: Basic serializer for User model - returns user data
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          description: User's email address, used for login
          maxLength: 254
        user_type:
          allOf:
          - $ref: '#/components/schemas/UserTypeEnum'
          description: |-
            Type of user: Parent, Psychologist, or Admin

            * `Parent` - Parent
            * `Psychologist` - Psychologist
            * `Admin` - Admin
        is_active:
          type: boolean
          default: true
          title: Active
          description: Designates whether this user should be treated as active.
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          title: Profile picture
          description: URL to user's profile picture
          maxLength: 512
        user_timezone:
          type: string
          minLength: 1
          default: UTC
          title: Timezone
          description: User's timezone for scheduling appointments
          maxLength: 50
      required:
      - email
      - user_type
    UserTypeEnum:
      enum:
      - Parent
      - Psychologist
      - Admin
      type: string
      description: |-
        * `Parent` - Parent
        * `Psychologist` - Psychologist
        * `Admin` - Admin
    VerificationStatusEnum:
      enum:
      - Pending
      - Approved
      - Rejected
      type: string
      description: |-
        * `Pending` - Pending
        * `Approved` - Approved
        * `Rejected` - Rejected
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
